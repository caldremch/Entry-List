apply plugin: 'com.github.breadmoirai.github-release'

githubRelease {
    token githubReleaseToken // This is your personal access token with Repo permissions
    // You get this from your user settings > developer settings > Personal Access Tokens
    owner "caldremch" // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
    repo "entrances" // by default this is set to your project name
    tagName "v1.6.3" // by default this is set to "v${project.version}"
    targetCommitish "master" // by default this is set to "main"
    releaseName "v1.6.3" // Release title, by default this is the same as the tagName
    generateReleaseNotes false // Generate release notes automatically, if true and body is present, body will be prepended, if name is not given, one will be generated by the tag
    body "" // by default this is empty
    draft true // by default this is true
    prerelease false // by default this is false
    releaseAssets.from('build/libs') // this points to which files you want to upload as assets with your release, by default this is empty
    allowUploadToExisting.set false // Setting this to true will allow this plugin to upload artifacts to a release if it found an existing one. If overwrite is set to true, this option is ignored.
    overwrite false // by default false; if set to true, will delete an existing release with the same tag and name
    dryRun false // by default false; you can use this to see what actions would be taken without making a release
    apiEndpoint "https://api.github.com" // should only change for github enterprise users
    client // This is the okhttp client used for http requests
}
